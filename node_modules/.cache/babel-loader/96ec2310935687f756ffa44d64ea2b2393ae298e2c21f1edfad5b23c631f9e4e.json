{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\n// export interface CounterState {\n//   value: number;\n// }\n\n// // Define the initial state using that type\n// const initialState: CounterState = {\n//   value: 0,\n// };\n\n// interface PersonState {\n//   value: 0;\n// //   persons: Person[];\n// }\nconst initialState = {\n  persons: [],\n  value: 0,\n  selectedColor: \"green\"\n};\n\n// const initialState: PersonState = {\n//   persons: [],\n// };\n\nexport const fetchPerson = createAsyncThunk(\"person/fetch\", async thunkAPI => {\n  const response = await fetch(\"https://api.mocki.io/v2/016d11e8/product-widgets\", {\n    method: \"GET\"\n  });\n  const data = response.json();\n  console.log(response, \"RESPONSE HERE YOOO\");\n  return data;\n});\nexport const PersonSlice = createSlice({\n  name: \"person\",\n  initialState,\n  reducers: {\n    // addPerson: (state, action) => {\n    //   state.persons = action.payload;\n    // },\n\n    addPerson: (state, action) => {\n      state.selectedColor = action.payload;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchPerson.fulfilled, (state, action) => {\n      state.persons = action.payload;\n    });\n    // builder.addCase(savePerson.fulfilled, (state, action) => {\n    //   state.persons.push(action.payload);\n    // });\n  }\n});\n\nexport default PersonSlice.reducer;\nexport const {\n  addPerson\n} = PersonSlice.actions;","map":{"version":3,"names":["createAsyncThunk","createSlice","initialState","persons","value","selectedColor","fetchPerson","thunkAPI","response","fetch","method","data","json","console","log","PersonSlice","name","reducers","addPerson","state","action","payload","extraReducers","builder","addCase","fulfilled","reducer","actions"],"sources":["/Users/brettdickenson1/Desktop/WORK/TypeScript/redux-ts/src/store/features/personSlice.ts"],"sourcesContent":["import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\nexport interface Person {\n  value: number;\n  persons: [];\n  //   id: number;\n  //   action: string;\n  //   active: boolean;\n  //   amount: number;\n  //   linked: boolean;\n  selectedColor: string;\n  //   type: string;\n}\n\n// export interface CounterState {\n//   value: number;\n// }\n\n// // Define the initial state using that type\n// const initialState: CounterState = {\n//   value: 0,\n// };\n\n// interface PersonState {\n//   value: 0;\n// //   persons: Person[];\n// }\n\nconst initialState: Person = {\n  persons: [],\n  value: 0,\n  selectedColor: \"green\",\n};\n\n// const initialState: PersonState = {\n//   persons: [],\n// };\n\nexport const fetchPerson = createAsyncThunk(\n  \"person/fetch\",\n  async (thunkAPI) => {\n    const response = await fetch(\n      \"https://api.mocki.io/v2/016d11e8/product-widgets\",\n      {\n        method: \"GET\",\n      }\n    );\n    const data = response.json();\n    console.log(response, \"RESPONSE HERE YOOO\");\n    return data;\n  }\n);\n\nexport const PersonSlice = createSlice({\n  name: \"person\",\n  initialState,\n  reducers: {\n    // addPerson: (state, action) => {\n    //   state.persons = action.payload;\n    // },\n\n    addPerson: (state, action: PayloadAction<string>) => {\n      state.selectedColor = action.payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchPerson.fulfilled, (state, action) => {\n      state.persons = action.payload;\n    });\n    // builder.addCase(savePerson.fulfilled, (state, action) => {\n    //   state.persons.push(action.payload);\n    // });\n  },\n});\n\nexport default PersonSlice.reducer;\nexport const { addPerson } = PersonSlice.actions;\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAuB,kBAAkB;AAc/E;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAEA,MAAMC,YAAoB,GAAG;EAC3BC,OAAO,EAAE,EAAE;EACXC,KAAK,EAAE,CAAC;EACRC,aAAa,EAAE;AACjB,CAAC;;AAED;AACA;AACA;;AAEA,OAAO,MAAMC,WAAW,GAAGN,gBAAgB,CACzC,cAAc,EACd,MAAOO,QAAQ,IAAK;EAClB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,kDAAkD,EAClD;IACEC,MAAM,EAAE;EACV,CACF,CAAC;EACD,MAAMC,IAAI,GAAGH,QAAQ,CAACI,IAAI,CAAC,CAAC;EAC5BC,OAAO,CAACC,GAAG,CAACN,QAAQ,EAAE,oBAAoB,CAAC;EAC3C,OAAOG,IAAI;AACb,CACF,CAAC;AAED,OAAO,MAAMI,WAAW,GAAGd,WAAW,CAAC;EACrCe,IAAI,EAAE,QAAQ;EACdd,YAAY;EACZe,QAAQ,EAAE;IACR;IACA;IACA;;IAEAC,SAAS,EAAEA,CAACC,KAAK,EAAEC,MAA6B,KAAK;MACnDD,KAAK,CAACd,aAAa,GAAGe,MAAM,CAACC,OAAO;IACtC;EACF,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CAACC,OAAO,CAAClB,WAAW,CAACmB,SAAS,EAAE,CAACN,KAAK,EAAEC,MAAM,KAAK;MACxDD,KAAK,CAAChB,OAAO,GAAGiB,MAAM,CAACC,OAAO;IAChC,CAAC,CAAC;IACF;IACA;IACA;EACF;AACF,CAAC,CAAC;;AAEF,eAAeN,WAAW,CAACW,OAAO;AAClC,OAAO,MAAM;EAAER;AAAU,CAAC,GAAGH,WAAW,CAACY,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}