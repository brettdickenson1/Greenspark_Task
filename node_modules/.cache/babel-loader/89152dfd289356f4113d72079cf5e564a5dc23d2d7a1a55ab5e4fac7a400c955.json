{"ast":null,"code":"var _jsxFileName = \"/Users/brettdickenson1/Desktop/WORK/TypeScript/greenspark-tech-task/src/stories/Input.stories.tsx\",\n  _Default$parameters,\n  _Default$parameters2,\n  _Default$parameters2$;\n// import type { Meta, StoryObj } from \"@storybook/react\";\n// import { within, userEvent } from \"@storybook/testing-library\";\n// import WidgetInput from \"../components/UI/WidgetInput/WidgetInput\";\n\n// const meta = {\n//   title: \"WidgetInput\",\n//   component: WidgetInput,\n//   tags: [\"autodocs\"],\n//   argTypes: {\n//     handleClick: { action: \"onClick\" },\n//   },\n// } as Meta<typeof WidgetInput>;\n\n// export default meta;\n\n// export const LinkedInputOnClick: StoryObj<typeof WidgetInput> = (args: any) => {\n//   return <WidgetInput {...args} />;\n// };\n\n// LinkedInputOnClick.args = {\n//   toggleStyles: false,\n//   checkedState: false,\n//   widgetData: {\n//     id: 1,\n//     type: \"plastic bottles\",\n//     amount: 100,\n//     active: false,\n//     linked: false,\n//     selectedColor: \"#2E3A8C\",\n//   },\n//   //   updateInput: () => {\n//   //     console.log(\"btn click\");\n//   //   },\n// };\n\nimport React from \"react\";\nimport { Button } from \"../components/UI/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst meta = {\n  title: \"Button\",\n  component: Button\n};\nexport default meta;\nconst Template = args => /*#__PURE__*/_jsxDEV(Button, {\n  ...args\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 46,\n  columnNumber: 43\n}, this);\n_c = Template;\nexport const Default = Template.bind({});\n\n// export const Default = () => <Button variant=\"primary\">Click me</Button>;\nDefault.parameters = {\n  ...Default.parameters,\n  docs: {\n    ...((_Default$parameters = Default.parameters) === null || _Default$parameters === void 0 ? void 0 : _Default$parameters.docs),\n    source: {\n      originalSource: \"args => <Button {...args} />\",\n      ...((_Default$parameters2 = Default.parameters) === null || _Default$parameters2 === void 0 ? void 0 : (_Default$parameters2$ = _Default$parameters2.docs) === null || _Default$parameters2$ === void 0 ? void 0 : _Default$parameters2$.source)\n    }\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"Template\");\nexport const __namedExportsOrder = [\"Default\"];","map":{"version":3,"names":[],"sources":[],"sourcesContent":["// import type { Meta, StoryObj } from \"@storybook/react\";\n// import { within, userEvent } from \"@storybook/testing-library\";\n// import WidgetInput from \"../components/UI/WidgetInput/WidgetInput\";\n\n// const meta = {\n//   title: \"WidgetInput\",\n//   component: WidgetInput,\n//   tags: [\"autodocs\"],\n//   argTypes: {\n//     handleClick: { action: \"onClick\" },\n//   },\n// } as Meta<typeof WidgetInput>;\n\n// export default meta;\n\n// export const LinkedInputOnClick: StoryObj<typeof WidgetInput> = (args: any) => {\n//   return <WidgetInput {...args} />;\n// };\n\n// LinkedInputOnClick.args = {\n//   toggleStyles: false,\n//   checkedState: false,\n//   widgetData: {\n//     id: 1,\n//     type: \"plastic bottles\",\n//     amount: 100,\n//     active: false,\n//     linked: false,\n//     selectedColor: \"#2E3A8C\",\n//   },\n//   //   updateInput: () => {\n//   //     console.log(\"btn click\");\n//   //   },\n// };\n\nimport type { Meta, StoryObj } from \"@storybook/react\";\nimport React from \"react\";\nimport WidgetInput from \"../components/UI/WidgetInput/WidgetInput\";\nimport { InputProps } from \"../types/globalTypes\";\nimport { Button, Props } from \"../components/UI/Button\";\nconst meta: Meta = {\n  title: \"Button\",\n  component: Button\n};\nexport default meta;\nconst Template: StoryObj<Props> = args => <Button {...args} />;\nexport const Default = Template.bind({});\n\n// export const Default = () => <Button variant=\"primary\">Click me</Button>;\nDefault.parameters = {\n  ...Default.parameters,\n  docs: {\n    ...Default.parameters?.docs,\n    source: {\n      originalSource: \"args => <Button {...args} />\",\n      ...Default.parameters?.docs?.source\n    }\n  }\n};"],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}