{"ast":null,"code":"var _jsxFileName = \"/Users/brettdickenson1/Desktop/WORK/TypeScript/greenspark-tech-task/src/components/WidgetBoxes/WidgetBoxes.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport \"./WidgetBoxes.scss\";\nimport { useAppDispatch, useAppSelector } from \"../../store/hooks/hooks\";\nimport { updateWidget, fetchWidgetData, activateBadge, activateLinked, updateWidgetColor } from \"../../store/features/widgetSlice\";\nimport greenSparkLogo from \"../../assets/images/greenspark-logo.svg\";\nimport greenSparkLogoGreen from \"../../assets/images/greenspark-logo-green.svg\";\nimport greenSparkLogoBlack from \"../../assets/images/greenspark-logo-black.svg\";\nimport toolTipImg from \"../../assets/images/Tooltip.svg\";\nimport WidgetBtn from \"../UI/WidgetBtn/WidgetBtn\";\nimport WidgetInput from \"../UI/WidgetInput/WidgetInput\";\nimport SkeletonLoad from \"../UI/SkeletonLoading/SkeletonLoad/SkeletonLoad\";\nimport { setupStore } from \"../../store/store\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst COLORS = {\n  blue: \"#2E3A8C\",\n  green: \"#3B755F\",\n  creme: \"#F2EBDB\"\n};\nconst COLORSMAP = {\n  id: 1,\n  id2: 2,\n  id3: 3,\n  id4: 4,\n  id5: 5\n};\nconst WidgetBoxes = () => {\n  _s();\n  const dispatch = useAppDispatch();\n  const widgetData = useAppSelector(state => state.widgetData.widgetData);\n  const store = setupStore();\n  useEffect(() => {\n    dispatch(fetchWidgetData()).unwrap().then(() => dispatch(updateWidgetColor())).catch(e => e);\n  }, []);\n  const updateColor = (index, boxColor, colorID) => {\n    dispatch(updateWidget({\n      id: index,\n      selectedColor: boxColor,\n      colorID: colorID\n    }));\n  };\n  const updateInputLinked = index => {\n    dispatch(activateLinked({\n      id: index\n    }));\n  };\n  const updateInputBadge = index => {\n    dispatch(activateBadge({\n      id: index\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"widgetBox\",\n    \"data-testid\": \"widgetBox\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Per product widgets\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), (widgetData === null || widgetData === void 0 ? void 0 : widgetData.length) > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"innerBoxes\",\n      children: widgetData.map((widget, i) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"outerBox\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              background: widget.selectedColor,\n              color: widget.selectedColor === COLORS.creme ? COLORS.green : widget.selectedColor === \"white\" ? \"black\" : \"white\"\n            },\n            className: \"top\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: widget.selectedColor === COLORS.creme ? greenSparkLogoGreen : widget.selectedColor === \"white\" ? greenSparkLogoBlack : greenSparkLogo,\n              alt: \"greensparkLogo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              \"datatest-id\": \"widgetDesc\",\n              className: \"widgetContainer\",\n              style: {\n                border: \"1px solid red\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                role: \"actionInfo\",\n                children: [\"This product \", widget.action]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"widgetTitle\",\n                children: widget.type === \"carbon\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [widget.amount, \"kgs of \", widget.type]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 101,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [widget.amount, \" \", widget.type]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bottom\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"innerBottom\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"publicProfile\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Link to Public Profile\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"tooltip\",\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: toolTipImg,\n                    alt: \"toolTipImg\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 120,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"tooltiptext\",\n                    children: [\"This widget links directly to your public profile so that you can easily share your impact with your customers. Turn it off here if you do not want the badge to link to it.\", /*#__PURE__*/_jsxDEV(\"a\", {\n                      \"aria-disabled\": true,\n                      href: \"https://brett-dickenson-portfolio.netlify.app/\",\n                      children: \"View Public Profile\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 126,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 121,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(WidgetInput, {\n                toggleStyles: false,\n                checkedState: widget.linked ? true : false,\n                updateInput: updateInputLinked,\n                widgetData: widget\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"coloredBtns\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Badge color\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"colorBox\",\n                children: [/*#__PURE__*/_jsxDEV(WidgetBtn, {\n                  updateColor: updateColor,\n                  widgetData: widget,\n                  boxColor: COLORS.blue,\n                  colorID: COLORSMAP.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(WidgetBtn, {\n                  updateColor: updateColor,\n                  widgetData: widget,\n                  boxColor: COLORS.green,\n                  colorID: COLORSMAP.id2\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(WidgetBtn, {\n                  updateColor: updateColor,\n                  widgetData: widget,\n                  boxColor: COLORS.creme,\n                  colorID: COLORSMAP.id3\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(WidgetBtn, {\n                  updateColor: updateColor,\n                  widgetData: widget,\n                  boxColor: \"white\",\n                  colorID: COLORSMAP.id4\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(WidgetBtn, {\n                  updateColor: updateColor,\n                  widgetData: widget,\n                  boxColor: \"black\",\n                  colorID: COLORSMAP.id5\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"activateBadge\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Activate badge\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(WidgetInput, {\n                toggleStyles: true,\n                checkedState: widget.active ? true : false,\n                updateInput: updateInputBadge,\n                widgetData: widget\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 17\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"skeletonContainer\",\n      children: [1, 2, 3].map(n => /*#__PURE__*/_jsxDEV(SkeletonLoad, {}, n, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(WidgetBoxes, \"tSLzesUHCHKfyyYphEKB6wu+A3Y=\", false, function () {\n  return [useAppDispatch, useAppSelector];\n});\n_c = WidgetBoxes;\nexport default WidgetBoxes;\nvar _c;\n$RefreshReg$(_c, \"WidgetBoxes\");","map":{"version":3,"names":["React","useEffect","useAppDispatch","useAppSelector","updateWidget","fetchWidgetData","activateBadge","activateLinked","updateWidgetColor","greenSparkLogo","greenSparkLogoGreen","greenSparkLogoBlack","toolTipImg","WidgetBtn","WidgetInput","SkeletonLoad","setupStore","jsxDEV","_jsxDEV","Fragment","_Fragment","COLORS","blue","green","creme","COLORSMAP","id","id2","id3","id4","id5","WidgetBoxes","_s","dispatch","widgetData","state","store","unwrap","then","catch","e","updateColor","index","boxColor","colorID","selectedColor","updateInputLinked","updateInputBadge","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","widget","i","style","background","color","src","alt","border","role","action","type","amount","href","toggleStyles","checkedState","linked","updateInput","active","n","_c","$RefreshReg$"],"sources":["/Users/brettdickenson1/Desktop/WORK/TypeScript/greenspark-tech-task/src/components/WidgetBoxes/WidgetBoxes.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport \"./WidgetBoxes.scss\";\nimport { useAppDispatch, useAppSelector } from \"../../store/hooks/hooks\";\nimport {\n  updateWidget,\n  fetchWidgetData,\n  activateBadge,\n  activateLinked,\n  updateWidgetColor,\n} from \"../../store/features/widgetSlice\";\nimport greenSparkLogo from \"../../assets/images/greenspark-logo.svg\";\nimport greenSparkLogoGreen from \"../../assets/images/greenspark-logo-green.svg\";\nimport greenSparkLogoBlack from \"../../assets/images/greenspark-logo-black.svg\";\nimport toolTipImg from \"../../assets/images/Tooltip.svg\";\nimport WidgetBtn from \"../UI/WidgetBtn/WidgetBtn\";\nimport WidgetInput from \"../UI/WidgetInput/WidgetInput\";\nimport SkeletonLoad from \"../UI/SkeletonLoading/SkeletonLoad/SkeletonLoad\";\nimport { setupStore } from \"../../store/store\";\n\nconst COLORS = {\n  blue: \"#2E3A8C\",\n  green: \"#3B755F\",\n  creme: \"#F2EBDB\",\n};\n\nconst COLORSMAP = {\n  id: 1,\n  id2: 2,\n  id3: 3,\n  id4: 4,\n  id5: 5,\n};\n\nconst WidgetBoxes: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const widgetData = useAppSelector((state) => state.widgetData.widgetData);\n  const store = setupStore();\n\n  useEffect(() => {\n    dispatch(fetchWidgetData())\n      .unwrap()\n      .then(() => dispatch(updateWidgetColor()))\n      .catch((e) => e);\n  }, []);\n\n  const updateColor = (index: number, boxColor: string, colorID: number) => {\n    dispatch(\n      updateWidget({ id: index, selectedColor: boxColor, colorID: colorID })\n    );\n  };\n\n  const updateInputLinked = (index: number) => {\n    dispatch(activateLinked({ id: index }));\n  };\n\n  const updateInputBadge = (index: number) => {\n    dispatch(activateBadge({ id: index }));\n  };\n\n  return (\n    <div className=\"widgetBox\" data-testid=\"widgetBox\">\n      <h3>Per product widgets</h3>\n      <hr />\n      {widgetData?.length > 0 ? (\n        <div className={\"innerBoxes\"}>\n          {widgetData.map((widget, i) => {\n            return (\n              <div key={i} className=\"outerBox\">\n                <div\n                  style={{\n                    background: widget.selectedColor,\n                    color:\n                      widget.selectedColor === COLORS.creme\n                        ? COLORS.green\n                        : widget.selectedColor === \"white\"\n                        ? \"black\"\n                        : \"white\",\n                  }}\n                  className=\"top\"\n                >\n                  <img\n                    src={\n                      widget.selectedColor === COLORS.creme\n                        ? greenSparkLogoGreen\n                        : widget.selectedColor === \"white\"\n                        ? greenSparkLogoBlack\n                        : greenSparkLogo\n                    }\n                    alt=\"greensparkLogo\"\n                  />\n                  <div\n                    datatest-id=\"widgetDesc\"\n                    className=\"widgetContainer\"\n                    style={{ border: \"1px solid red\" }}\n                  >\n                    <p role=\"actionInfo\">This product {widget.action}</p>\n                    <br />\n                    <div className=\"widgetTitle\">\n                      {widget.type === \"carbon\" ? (\n                        <>\n                          <span>\n                            {widget.amount}kgs of {widget.type}\n                          </span>\n                        </>\n                      ) : (\n                        <>\n                          <span>\n                            {widget.amount} {widget.type}\n                          </span>\n                        </>\n                      )}\n                    </div>\n                  </div>\n                </div>\n                <div className=\"bottom\">\n                  <div className=\"innerBottom\">\n                    <div className=\"publicProfile\">\n                      <p>Link to Public Profile</p>\n                      <div className=\"tooltip\">\n                        <img src={toolTipImg} alt=\"toolTipImg\" />\n                        <span className=\"tooltiptext\">\n                          This widget links directly to your public profile so\n                          that you can easily share your impact with your\n                          customers. Turn it off here if you do not want the\n                          badge to link to it.\n                          <a\n                            aria-disabled\n                            href=\"https://brett-dickenson-portfolio.netlify.app/\"\n                          >\n                            View Public Profile\n                          </a>\n                        </span>\n                      </div>\n                    </div>\n                    <WidgetInput\n                      toggleStyles={false}\n                      checkedState={widget.linked ? true : false}\n                      updateInput={updateInputLinked}\n                      widgetData={widget}\n                    />\n                  </div>\n                  <div className=\"coloredBtns\">\n                    <p>Badge color</p>\n                    <div className=\"colorBox\">\n                      <WidgetBtn\n                        updateColor={updateColor}\n                        widgetData={widget}\n                        boxColor={COLORS.blue}\n                        colorID={COLORSMAP.id}\n                      />\n                      <WidgetBtn\n                        updateColor={updateColor}\n                        widgetData={widget}\n                        boxColor={COLORS.green}\n                        colorID={COLORSMAP.id2}\n                      />\n                      <WidgetBtn\n                        updateColor={updateColor}\n                        widgetData={widget}\n                        boxColor={COLORS.creme}\n                        colorID={COLORSMAP.id3}\n                      />\n                      <WidgetBtn\n                        updateColor={updateColor}\n                        widgetData={widget}\n                        boxColor={\"white\"}\n                        colorID={COLORSMAP.id4}\n                      />\n                      <WidgetBtn\n                        updateColor={updateColor}\n                        widgetData={widget}\n                        boxColor={\"black\"}\n                        colorID={COLORSMAP.id5}\n                      />\n                    </div>\n                  </div>\n                  <div className=\"activateBadge\">\n                    <p>Activate badge</p>\n                    <WidgetInput\n                      toggleStyles={true}\n                      checkedState={widget.active ? true : false}\n                      updateInput={updateInputBadge}\n                      widgetData={widget}\n                    />\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      ) : (\n        <div className=\"skeletonContainer\">\n          {[1, 2, 3].map((n) => (\n            <SkeletonLoad key={n} />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default WidgetBoxes;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}