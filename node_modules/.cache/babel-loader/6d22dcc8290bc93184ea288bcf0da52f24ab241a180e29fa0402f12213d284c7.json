{"ast":null,"code":"import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\nimport { WidgetSlice } from \"./features/widgetSlice\";\n\n// Create the root reducer independently to obtain the RootState type\nconst rootReducer = combineReducers({\n  widgetData: WidgetSlice.reducer\n});\nexport function setupStore(preloadedState) {\n  return configureStore({\n    reducer: rootReducer,\n    preloadedState\n  });\n}","map":{"version":3,"names":["combineReducers","configureStore","WidgetSlice","rootReducer","widgetData","reducer","setupStore","preloadedState"],"sources":["/Users/brettdickenson1/Desktop/WORK/TypeScript/greenspark-tech-task/src/store/store.ts"],"sourcesContent":["import {\n  combineReducers,\n  configureStore,\n  PreloadedState,\n} from \"@reduxjs/toolkit\";\nimport { WidgetSlice } from \"./features/widgetSlice\";\n\n// Create the root reducer independently to obtain the RootState type\nconst rootReducer = combineReducers({\n  widgetData: WidgetSlice.reducer,\n});\nexport function setupStore(preloadedState?: PreloadedState<RootState>) {\n  return configureStore({\n    reducer: rootReducer,\n    preloadedState,\n  });\n}\nexport type RootState = ReturnType<typeof rootReducer>;\nexport type AppStore = ReturnType<typeof setupStore>;\nexport type AppDispatch = AppStore[\"dispatch\"];\n"],"mappings":"AAAA,SACEA,eAAe,EACfC,cAAc,QAET,kBAAkB;AACzB,SAASC,WAAW,QAAQ,wBAAwB;;AAEpD;AACA,MAAMC,WAAW,GAAGH,eAAe,CAAC;EAClCI,UAAU,EAAEF,WAAW,CAACG;AAC1B,CAAC,CAAC;AACF,OAAO,SAASC,UAAUA,CAACC,cAA0C,EAAE;EACrE,OAAON,cAAc,CAAC;IACpBI,OAAO,EAAEF,WAAW;IACpBI;EACF,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}