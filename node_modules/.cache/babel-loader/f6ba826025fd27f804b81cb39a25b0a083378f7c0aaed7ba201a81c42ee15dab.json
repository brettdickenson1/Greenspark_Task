{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialState = {\n  widgetData: [],\n  boxColors: [{\n    colorID: 1,\n    color: \"#2E3A8C\",\n    setFocus: false\n  }, {\n    colorID: 2,\n    color: \"#3B755F\",\n    setFocus: false\n  }, {\n    colorID: 3,\n    color: \"#F2EBDB\",\n    setFocus: false\n  }, {\n    colorID: 4,\n    color: \"white\",\n    setFocus: false\n  }, {\n    colorID: 5,\n    color: \"black\",\n    setFocus: false\n  }]\n};\nexport const fetchWidgetData = createAsyncThunk(\"widgetData/fetch\", async () => {\n  try {\n    const url = \"https://api.mocki.io/v2/016d11e8/product-widgets\";\n    const response = await axios.get(url);\n    return response.data;\n  } catch (err) {\n    console.log(err);\n    return [];\n  }\n});\nexport const WidgetSlice = createSlice({\n  name: \"widget\",\n  initialState,\n  reducers: {\n    updateWidget: (state, action) => {\n      const index = action.payload.id;\n      return {\n        ...state,\n        widgetData: state.widgetData.map((content, i) => index === content.id ? {\n          ...content,\n          selectedColor: action.payload.selectedColor,\n          boxColors: [{\n            colorID: 1,\n            color: \"#2E3A8C\",\n            setFocus: false\n          }, {\n            colorID: 2,\n            color: \"#3B755F\",\n            setFocus: false\n          }, {\n            colorID: 3,\n            color: \"#F2EBDB\",\n            setFocus: false\n          }, {\n            colorID: 4,\n            color: \"white\",\n            setFocus: false\n          }, {\n            colorID: 5,\n            color: \"black\",\n            setFocus: false\n          }]\n        } : index !== content.id ? {\n          ...content,\n          active: false,\n          linked: false,\n          setFocus: false\n        } : content)\n      };\n    },\n    updateWidgetColor: state => {\n      return {\n        ...state,\n        widgetData: state.widgetData.map((content, i) => content.selectedColor === \"green\" ? {\n          ...content,\n          selectedColor: \"#2E3A8C\",\n          active: false,\n          linked: true\n        } : content.selectedColor === \"black\" ? {\n          ...content,\n          selectedColor: \"#3B755F\",\n          active: false,\n          linked: true\n        } : content.selectedColor === \"blue\" ? {\n          ...content,\n          selectedColor: \"#F2EBDB\",\n          active: false,\n          linked: true,\n          amount: 100\n        } : content)\n      };\n    },\n    activateLinked: (state, action) => {\n      return {\n        ...state,\n        widgetData: state.widgetData.map((content, i) => action.payload.id === content.id ? {\n          ...content,\n          linked: !content.linked\n        } : action.payload.id !== content.id ? {\n          ...content,\n          linked: false,\n          active: false\n        } : content)\n      };\n    },\n    activateBadge: (state, action) => {\n      return {\n        ...state,\n        widgetData: state.widgetData.map((content, i) => action.payload.id === content.id ? {\n          ...content,\n          active: !content.active\n        } : action.payload.id !== content.id ? {\n          ...content,\n          active: false,\n          linked: false\n        } : content)\n      };\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchWidgetData.fulfilled, (state, action) => {\n      state.widgetData = action.payload;\n    });\n  }\n});\nexport default WidgetSlice.reducer;\nexport const {\n  updateWidget,\n  activateBadge,\n  activateLinked,\n  updateWidgetColor\n} = WidgetSlice.actions;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","initialState","widgetData","boxColors","colorID","color","setFocus","fetchWidgetData","url","response","get","data","err","console","log","WidgetSlice","name","reducers","updateWidget","state","action","index","payload","id","map","content","i","selectedColor","active","linked","updateWidgetColor","amount","activateLinked","activateBadge","extraReducers","builder","addCase","fulfilled","reducer","actions"],"sources":["/Users/brettdickenson1/Desktop/WORK/TypeScript/greenspark-tech-task/src/store/features/widgetSlice.ts"],"sourcesContent":["import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { WidgetData, WidgetState } from \"../../types/globalTypes\";\nimport axios from \"axios\";\n\nconst initialState: WidgetState = {\n  widgetData: [],\n  boxColors: [\n    {\n      colorID: 1,\n      color: \"#2E3A8C\",\n      setFocus: false,\n    },\n    {\n      colorID: 2,\n      color: \"#3B755F\",\n      setFocus: false,\n    },\n    {\n      colorID: 3,\n      color: \"#F2EBDB\",\n      setFocus: false,\n    },\n    {\n      colorID: 4,\n      color: \"white\",\n      setFocus: false,\n    },\n    {\n      colorID: 5,\n      color: \"black\",\n      setFocus: false,\n    },\n  ],\n};\n\nexport const fetchWidgetData = createAsyncThunk(\n  \"widgetData/fetch\",\n  async () => {\n    try {\n      const url = \"https://api.mocki.io/v2/016d11e8/product-widgets\";\n      const response = await axios.get(url);\n      return response.data;\n    } catch (err) {\n      console.log(err);\n      return [];\n    }\n  }\n);\n\nexport const WidgetSlice = createSlice({\n  name: \"widget\",\n  initialState,\n  reducers: {\n    updateWidget: (\n      state,\n      action: PayloadAction<{\n        id: number;\n        selectedColor: string;\n      }>\n    ) => {\n      const index = action.payload.id;\n      return {\n        ...state,\n        widgetData: state.widgetData.map((content, i) =>\n          index === content.id\n            ? {\n                ...content,\n                selectedColor: action.payload.selectedColor,\n                boxColors: [\n                  {\n                    colorID: 1,\n                    color: \"#2E3A8C\",\n                    setFocus: false,\n                  },\n                  {\n                    colorID: 2,\n                    color: \"#3B755F\",\n                    setFocus: false,\n                  },\n                  {\n                    colorID: 3,\n                    color: \"#F2EBDB\",\n                    setFocus: false,\n                  },\n                  {\n                    colorID: 4,\n                    color: \"white\",\n                    setFocus: false,\n                  },\n                  {\n                    colorID: 5,\n                    color: \"black\",\n                    setFocus: false,\n                  },\n                ],\n              }\n            : index !== content.id\n            ? {\n                ...content,\n                active: false,\n                linked: false,\n                setFocus: false,\n              }\n            : content\n        ),\n      };\n    },\n    updateWidgetColor: (state) => {\n      return {\n        ...state,\n        widgetData: state.widgetData.map((content, i) =>\n          content.selectedColor === \"green\"\n            ? {\n                ...content,\n                selectedColor: \"#2E3A8C\",\n                active: false,\n                linked: true,\n              }\n            : content.selectedColor === \"black\"\n            ? {\n                ...content,\n                selectedColor: \"#3B755F\",\n                active: false,\n                linked: true,\n              }\n            : content.selectedColor === \"blue\"\n            ? {\n                ...content,\n                selectedColor: \"#F2EBDB\",\n                active: false,\n                linked: true,\n                amount: 100,\n              }\n            : content\n        ),\n      };\n    },\n    activateLinked: (state, action: PayloadAction<{ id: number }>) => {\n      return {\n        ...state,\n        widgetData: state.widgetData.map((content, i) =>\n          action.payload.id === content.id\n            ? { ...content, linked: !content.linked }\n            : action.payload.id !== content.id\n            ? { ...content, linked: false, active: false }\n            : content\n        ),\n      };\n    },\n    activateBadge: (state, action: PayloadAction<{ id: number }>) => {\n      return {\n        ...state,\n        widgetData: state.widgetData.map((content, i) =>\n          action.payload.id === content.id\n            ? { ...content, active: !content.active }\n            : action.payload.id !== content.id\n            ? { ...content, active: false, linked: false }\n            : content\n        ),\n      };\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(\n      fetchWidgetData.fulfilled,\n      (state, action: PayloadAction<WidgetData[]>) => {\n        state.widgetData = action.payload;\n      }\n    );\n  },\n});\n\nexport default WidgetSlice.reducer;\nexport const {\n  updateWidget,\n  activateBadge,\n  activateLinked,\n  updateWidgetColor,\n} = WidgetSlice.actions;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}