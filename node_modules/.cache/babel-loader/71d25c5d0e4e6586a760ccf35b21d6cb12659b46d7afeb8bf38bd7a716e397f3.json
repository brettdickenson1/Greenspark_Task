{"ast":null,"code":"var _jsxFileName = \"/Users/brettdickenson1/Desktop/WORK/TypeScript/greenspark-tech-task/src/components/UI/WidgetBtn/WidgetBtn.tsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WidgetBtn = ({\n  widgetData,\n  boxColor,\n  updateColor,\n  colorID\n}) => {\n  var _widgetData$boxColors;\n  console.log(widgetData.boxColors, \"!!!!\");\n  const widgetBoxColors = widgetData === null || widgetData === void 0 ? void 0 : widgetData.boxColors;\n  widgetBoxColors === null || widgetBoxColors === void 0 ? void 0 : widgetBoxColors.map(res => {\n    if (res.setFocus) {\n      console.log(res.colorID, \"COLOR ID TRUE\");\n    }\n  });\n  console.log(colorID, \"BOX ID TRUE\");\n  const trueColor = widgetBoxColors === null || widgetBoxColors === void 0 ? void 0 : widgetBoxColors.filter(trueVal => trueVal.setFocus);\n\n  // console.log(trueColor);\n\n  // console.log(mapColors);\n\n  console.log(widgetData === null || widgetData === void 0 ? void 0 : widgetData.boxColors, \"dd\");\n  const x = widgetData !== null && widgetData !== void 0 && widgetData.boxColors ? widgetData === null || widgetData === void 0 ? void 0 : (_widgetData$boxColors = widgetData.boxColors) === null || _widgetData$boxColors === void 0 ? void 0 : _widgetData$boxColors.colorID : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      // style={\n      //   trueColor\n      //     ? {\n      //         border: \"1px solid red\",\n      //         backgroundColor: boxColor,\n      //         cursor: \"pointer\",\n      //       }\n      //     : {\n      //         backgroundColor: boxColor,\n      //         cursor: \"pointer\",\n      //       }\n      // }\n      style: {\n        backgroundColor: boxColor,\n        cursor: \"pointer\"\n      },\n      onClick: () => updateColor(widgetData.id, boxColor, boxID)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_c = WidgetBtn;\nexport default WidgetBtn;\nvar _c;\n$RefreshReg$(_c, \"WidgetBtn\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","WidgetBtn","widgetData","boxColor","updateColor","colorID","_widgetData$boxColors","console","log","boxColors","widgetBoxColors","map","res","setFocus","trueColor","filter","trueVal","x","children","style","backgroundColor","cursor","onClick","id","boxID","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/brettdickenson1/Desktop/WORK/TypeScript/greenspark-tech-task/src/components/UI/WidgetBtn/WidgetBtn.tsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { BtnProps } from \"../../../types/globalTypes\";\n\nconst WidgetBtn: React.FC<BtnProps> = ({\n  widgetData,\n  boxColor,\n  updateColor,\n  colorID,\n}) => {\n  console.log(widgetData.boxColors, \"!!!!\");\n  const widgetBoxColors = widgetData?.boxColors;\n\n  widgetBoxColors?.map((res) => {\n    if (res.setFocus) {\n      console.log(res.colorID, \"COLOR ID TRUE\");\n    }\n  });\n\n  console.log(colorID, \"BOX ID TRUE\");\n\n  const trueColor = widgetBoxColors?.filter((trueVal) => trueVal.setFocus);\n\n  // console.log(trueColor);\n\n  // console.log(mapColors);\n\n  console.log(widgetData?.boxColors, \"dd\");\n\n  const x = widgetData?.boxColors ? widgetData?.boxColors?.colorID : null;\n\n  return (\n    <div>\n      <button\n        // style={\n        //   trueColor\n        //     ? {\n        //         border: \"1px solid red\",\n        //         backgroundColor: boxColor,\n        //         cursor: \"pointer\",\n        //       }\n        //     : {\n        //         backgroundColor: boxColor,\n        //         cursor: \"pointer\",\n        //       }\n        // }\n        style={{\n          backgroundColor: boxColor,\n          cursor: \"pointer\",\n        }}\n        onClick={() => updateColor(widgetData.id, boxColor, boxID)}\n      ></button>\n    </div>\n  );\n};\n\nexport default WidgetBtn;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAqB,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGzC,MAAMC,SAA6B,GAAGA,CAAC;EACrCC,UAAU;EACVC,QAAQ;EACRC,WAAW;EACXC;AACF,CAAC,KAAK;EAAA,IAAAC,qBAAA;EACJC,OAAO,CAACC,GAAG,CAACN,UAAU,CAACO,SAAS,EAAE,MAAM,CAAC;EACzC,MAAMC,eAAe,GAAGR,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEO,SAAS;EAE7CC,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAEC,GAAG,CAAEC,GAAG,IAAK;IAC5B,IAAIA,GAAG,CAACC,QAAQ,EAAE;MAChBN,OAAO,CAACC,GAAG,CAACI,GAAG,CAACP,OAAO,EAAE,eAAe,CAAC;IAC3C;EACF,CAAC,CAAC;EAEFE,OAAO,CAACC,GAAG,CAACH,OAAO,EAAE,aAAa,CAAC;EAEnC,MAAMS,SAAS,GAAGJ,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAEK,MAAM,CAAEC,OAAO,IAAKA,OAAO,CAACH,QAAQ,CAAC;;EAExE;;EAEA;;EAEAN,OAAO,CAACC,GAAG,CAACN,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEO,SAAS,EAAE,IAAI,CAAC;EAExC,MAAMQ,CAAC,GAAGf,UAAU,aAAVA,UAAU,eAAVA,UAAU,CAAEO,SAAS,GAAGP,UAAU,aAAVA,UAAU,wBAAAI,qBAAA,GAAVJ,UAAU,CAAEO,SAAS,cAAAH,qBAAA,uBAArBA,qBAAA,CAAuBD,OAAO,GAAG,IAAI;EAEvE,oBACEL,OAAA;IAAAkB,QAAA,eACElB,OAAA;MACE;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACAmB,KAAK,EAAE;QACLC,eAAe,EAAEjB,QAAQ;QACzBkB,MAAM,EAAE;MACV,CAAE;MACFC,OAAO,EAAEA,CAAA,KAAMlB,WAAW,CAACF,UAAU,CAACqB,EAAE,EAAEpB,QAAQ,EAAEqB,KAAK;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV,CAAC;AAACC,EAAA,GAlDI5B,SAA6B;AAoDnC,eAAeA,SAAS;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}