{"ast":null,"code":"import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\n// export interface Person {\n//   id: any;\n//   action: string;\n//   active: boolean;\n//   amount: number;\n//   linked: boolean;\n//   selectedColor: string;\n//   type: string;\n// }\n\n// interface PersonState {\n//   persons: Person[];\n// }\n\nconst initialState = {\n  persons: []\n};\nexport const fetchPerson = createAsyncThunk(\"person/fetch\", async thunkAPI => {\n  const response = await fetch(\"https://api.mocki.io/v2/016d11e8/product-widgets\", {\n    method: \"GET\"\n  });\n  const data = response.json();\n  console.log(response, \"RESPONSE HERE YOOO\");\n  return data;\n});\nexport const PersonSlice = createSlice({\n  name: \"person\",\n  initialState,\n  reducers: {\n    updateWidget: (state, action) => {\n      const index = state.persons.findIndex(i => i.id === action.payload.id);\n      console.log(index);\n      return {\n        ...state,\n        persons: state.persons.map((content, i) => i.id === action.payload.id ? {\n          ...content,\n          selectedColor: action.payload\n        } : content)\n      };\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchPerson.fulfilled, (state, action) => {\n      state.persons = action.payload;\n    });\n    // builder.addCase(savePerson.fulfilled, (state, action) => {\n    //   state.persons.push(action.payload);\n    // });\n  }\n});\n\nexport default PersonSlice.reducer;\nexport const {\n  updateWidget\n} = PersonSlice.actions;","map":{"version":3,"names":["createAsyncThunk","createSlice","PayloadAction","initialState","persons","fetchPerson","thunkAPI","response","fetch","method","data","json","console","log","PersonSlice","name","reducers","updateWidget","state","action","index","findIndex","i","id","payload","map","content","selectedColor","extraReducers","builder","addCase","fulfilled","reducer","actions"],"sources":["/Users/brettdickenson1/Desktop/WORK/TypeScript/redux-ts/src/store/features/personSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\n// export interface Person {\n//   id: any;\n//   action: string;\n//   active: boolean;\n//   amount: number;\n//   linked: boolean;\n//   selectedColor: string;\n//   type: string;\n// }\n\n// interface PersonState {\n//   persons: Person[];\n// }\n\nconst initialState = {\n  persons: [],\n};\n\nexport const fetchPerson = createAsyncThunk(\n  \"person/fetch\",\n  async (thunkAPI) => {\n    const response = await fetch(\n      \"https://api.mocki.io/v2/016d11e8/product-widgets\",\n      {\n        method: \"GET\",\n      }\n    );\n    const data = response.json();\n    console.log(response, \"RESPONSE HERE YOOO\");\n    return data;\n  }\n);\n\nexport const PersonSlice = createSlice({\n  name: \"person\",\n  initialState,\n  reducers: {\n    updateWidget: (state, action) => {\n      const index = state.persons.findIndex((i) => i.id === action.payload.id);\n      console.log(index);\n      return {\n        ...state,\n        persons: state.persons.map((content, i) =>\n          i.id === action.payload.id\n            ? { ...content, selectedColor: action.payload }\n            : content\n        ),\n      };\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchPerson.fulfilled, (state, action) => {\n      state.persons = action.payload;\n    });\n    // builder.addCase(savePerson.fulfilled, (state, action) => {\n    //   state.persons.push(action.payload);\n    // });\n  },\n});\n\nexport default PersonSlice.reducer;\nexport const { updateWidget } = PersonSlice.actions;\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,EAAEC,aAAa,QAAQ,kBAAkB;;AAE/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,MAAMC,YAAY,GAAG;EACnBC,OAAO,EAAE;AACX,CAAC;AAED,OAAO,MAAMC,WAAW,GAAGL,gBAAgB,CACzC,cAAc,EACd,MAAOM,QAAQ,IAAK;EAClB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,kDAAkD,EAClD;IACEC,MAAM,EAAE;EACV,CACF,CAAC;EACD,MAAMC,IAAI,GAAGH,QAAQ,CAACI,IAAI,CAAC,CAAC;EAC5BC,OAAO,CAACC,GAAG,CAACN,QAAQ,EAAE,oBAAoB,CAAC;EAC3C,OAAOG,IAAI;AACb,CACF,CAAC;AAED,OAAO,MAAMI,WAAW,GAAGb,WAAW,CAAC;EACrCc,IAAI,EAAE,QAAQ;EACdZ,YAAY;EACZa,QAAQ,EAAE;IACRC,YAAY,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC/B,MAAMC,KAAK,GAAGF,KAAK,CAACd,OAAO,CAACiB,SAAS,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKJ,MAAM,CAACK,OAAO,CAACD,EAAE,CAAC;MACxEX,OAAO,CAACC,GAAG,CAACO,KAAK,CAAC;MAClB,OAAO;QACL,GAAGF,KAAK;QACRd,OAAO,EAAEc,KAAK,CAACd,OAAO,CAACqB,GAAG,CAAC,CAACC,OAAO,EAAEJ,CAAC,KACpCA,CAAC,CAACC,EAAE,KAAKJ,MAAM,CAACK,OAAO,CAACD,EAAE,GACtB;UAAE,GAAGG,OAAO;UAAEC,aAAa,EAAER,MAAM,CAACK;QAAQ,CAAC,GAC7CE,OACN;MACF,CAAC;IACH;EACF,CAAC;EACDE,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CAACC,OAAO,CAACzB,WAAW,CAAC0B,SAAS,EAAE,CAACb,KAAK,EAAEC,MAAM,KAAK;MACxDD,KAAK,CAACd,OAAO,GAAGe,MAAM,CAACK,OAAO;IAChC,CAAC,CAAC;IACF;IACA;IACA;EACF;AACF,CAAC,CAAC;;AAEF,eAAeV,WAAW,CAACkB,OAAO;AAClC,OAAO,MAAM;EAAEf;AAAa,CAAC,GAAGH,WAAW,CAACmB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}