{"ast":null,"code":"import WidgetInput from \"../components/UI/WidgetInput/WidgetInput\";\nconst meta = {\n  title: \"WidgetInput\",\n  component: WidgetInput,\n  tags: [\"autodocs\"],\n  argTypes: {\n    handleClick: {\n      action: \"onClick\"\n    }\n  }\n};\nexport default meta;\n\n// const Template = (args) => <WidgetInput {...args} />;\n\n// export const LinkedInputOnClick: Story = {\n//   args: {\n//     toggleStyles: false,\n//     checkedState: false,\n//     widgetData: {\n//       id: 1,\n//       type: \"plastic bottles\",\n//       amount: 100,\n//       active: false,\n//       linked: false,\n//       selectedColor: \"#2E3A8C\",\n//     },\n//     updateInput: () => {\n//       console.log(\"btn click\");\n//     },\n//   },\n//   play: async ({ canvasElement }) => {\n//     const canvas = within(canvasElement);\n//     const inputClicked = canvas.getByRole(\"input\");\n//     await expect(inputClicked).toBeInTheDocument();\n\n//     await userEvent.click(inputClicked);\n//   },\n// };","map":{"version":3,"names":[],"sources":[],"sourcesContent":["import type { Meta, StoryObj } from \"@storybook/react\";\nimport { within, userEvent } from \"@storybook/testing-library\";\nimport WidgetInput from \"../components/UI/WidgetInput/WidgetInput\";\nimport { expect } from \"@storybook/jest\";\nconst meta = ({\n  title: \"WidgetInput\",\n  component: WidgetInput,\n  tags: [\"autodocs\"],\n  argTypes: {\n    handleClick: {\n      action: \"onClick\"\n    }\n  }\n} satisfies Meta<typeof WidgetInput>);\nexport default meta;\n\n// const Template = (args) => <WidgetInput {...args} />;\n\ntype Story = StoryObj<typeof WidgetInput>;\n\n// export const LinkedInputOnClick: Story = {\n//   args: {\n//     toggleStyles: false,\n//     checkedState: false,\n//     widgetData: {\n//       id: 1,\n//       type: \"plastic bottles\",\n//       amount: 100,\n//       active: false,\n//       linked: false,\n//       selectedColor: \"#2E3A8C\",\n//     },\n//     updateInput: () => {\n//       console.log(\"btn click\");\n//     },\n//   },\n//   play: async ({ canvasElement }) => {\n//     const canvas = within(canvasElement);\n//     const inputClicked = canvas.getByRole(\"input\");\n//     await expect(inputClicked).toBeInTheDocument();\n\n//     await userEvent.click(inputClicked);\n//   },\n// };"],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}