{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialState = {\n  persons: []\n};\nexport const fetchPerson = createAsyncThunk(\"person/fetch\", async thunkAPI => {\n  const response = await axios.get(\"https://api.mocki.io/v2/016d11e8/product-widgets\", {\n    method: \"GET\"\n  });\n  const data = response;\n  console.log(response, \"RESPONSE HERE YOOO\");\n  return data;\n});\n\n// export const savePerson = createAsyncThunk(\n//   \"person/save\",\n//   async (name: string, thunkAPI) => {\n//     const response = await fetch(\"http://localhost:8000/person\", {\n//       method: \"POST\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify({\n//         name,\n//       }),\n//     });\n//     const data = await response.json();\n//     return data;\n//   }\n// );\n\nexport const PersonSlice = createSlice({\n  name: \"person\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchPerson.fulfilled, (state, action) => {\n      state.persons = action.payload;\n    });\n\n    // builder.addCase(savePerson.fulfilled, (state, action) => {\n    //   state.persons.push(action.payload);\n    // });\n  }\n});\n\nexport default PersonSlice.reducer;\n// export const { addPerson } = PersonSlice.actions;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","initialState","persons","fetchPerson","thunkAPI","response","get","method","data","console","log","PersonSlice","name","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","reducer"],"sources":["/Users/brettdickenson1/Desktop/WORK/TypeScript/redux-ts/src/store/features/personSlice.ts"],"sourcesContent":["import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nexport interface Person {\n  id: number;\n  action: string;\n  active: boolean;\n  amount: number;\n  linked: boolean;\n  selectedColor: string;\n  type: string;\n}\n\ninterface PersonState {\n  persons: Person[];\n}\n\nconst initialState: PersonState = {\n  persons: [],\n};\n\nexport const fetchPerson = createAsyncThunk(\n  \"person/fetch\",\n  async (thunkAPI) => {\n    const response = await axios.get(\n      \"https://api.mocki.io/v2/016d11e8/product-widgets\",\n      {\n        method: \"GET\",\n      }\n    );\n    const data = response;\n    console.log(response, \"RESPONSE HERE YOOO\");\n    return data;\n  }\n);\n\n// export const savePerson = createAsyncThunk(\n//   \"person/save\",\n//   async (name: string, thunkAPI) => {\n//     const response = await fetch(\"http://localhost:8000/person\", {\n//       method: \"POST\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify({\n//         name,\n//       }),\n//     });\n//     const data = await response.json();\n//     return data;\n//   }\n// );\n\nexport const PersonSlice = createSlice({\n  name: \"person\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchPerson.fulfilled, (state, action) => {\n      state.persons = action.payload;\n    });\n\n    // builder.addCase(savePerson.fulfilled, (state, action) => {\n    //   state.persons.push(action.payload);\n    // });\n  },\n});\n\nexport default PersonSlice.reducer;\n// export const { addPerson } = PersonSlice.actions;\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAuB,kBAAkB;AAC/E,OAAOC,KAAK,MAAM,OAAO;AAgBzB,MAAMC,YAAyB,GAAG;EAChCC,OAAO,EAAE;AACX,CAAC;AAED,OAAO,MAAMC,WAAW,GAAGL,gBAAgB,CACzC,cAAc,EACd,MAAOM,QAAQ,IAAK;EAClB,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAC9B,kDAAkD,EAClD;IACEC,MAAM,EAAE;EACV,CACF,CAAC;EACD,MAAMC,IAAI,GAAGH,QAAQ;EACrBI,OAAO,CAACC,GAAG,CAACL,QAAQ,EAAE,oBAAoB,CAAC;EAC3C,OAAOG,IAAI;AACb,CACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMG,WAAW,GAAGZ,WAAW,CAAC;EACrCa,IAAI,EAAE,QAAQ;EACdX,YAAY;EACZY,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CAACC,OAAO,CAACb,WAAW,CAACc,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MACxDD,KAAK,CAAChB,OAAO,GAAGiB,MAAM,CAACC,OAAO;IAChC,CAAC,CAAC;;IAEF;IACA;IACA;EACF;AACF,CAAC,CAAC;;AAEF,eAAeT,WAAW,CAACU,OAAO;AAClC"},"metadata":{},"sourceType":"module","externalDependencies":[]}