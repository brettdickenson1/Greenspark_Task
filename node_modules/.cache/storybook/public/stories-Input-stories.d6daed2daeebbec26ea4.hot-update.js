"use strict";
globalThis["webpackHotUpdateredux_ts"]("stories-Input-stories",{

/***/ "./src/stories/Input.stories.tsx":
/*!***************************************!*\
  !*** ./src/stories/Input.stories.tsx ***!
  \***************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   LinkedInputOnClick: () => (/* binding */ LinkedInputOnClick),
/* harmony export */   __namedExportsOrder: () => (/* binding */ __namedExportsOrder),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _components_UI_WidgetInput_WidgetInput__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../components/UI/WidgetInput/WidgetInput */ "./src/components/UI/WidgetInput/WidgetInput.tsx");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");
/* provided dependency */ var __react_refresh_error_overlay__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");

var _jsxFileName = "/Users/brettdickenson1/Desktop/WORK/TypeScript/greenspark-tech-task/src/stories/Input.stories.tsx",
  _LinkedInputOnClick$p,
  _LinkedInputOnClick$p2,
  _LinkedInputOnClick$p3;


const meta = {
  title: "WidgetInput",
  component: _components_UI_WidgetInput_WidgetInput__WEBPACK_IMPORTED_MODULE_0__["default"],
  tags: ["autodocs"],
  argTypes: {
    handleClick: {
      action: "onClick"
    }
  }
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (meta);
const LinkedInputOnClick = args => {
  /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(_components_UI_WidgetInput_WidgetInput__WEBPACK_IMPORTED_MODULE_0__["default"], {
    ...args
  }, void 0, false, {
    fileName: _jsxFileName,
    lineNumber: 16,
    columnNumber: 3
  }, undefined);
};
_c = LinkedInputOnClick;
LinkedInputOnClick.args = {
  toggleStyles: false,
  checkedState: false,
  //   widgetData: {
  //     id: 1,
  //     type: "plastic bottles",
  //     amount: 100,
  //     active: false,
  //     linked: false,
  //     selectedColor: "#2E3A8C",
  //   },
  updateInput: () => {
    console.log("btn click");
  }
};
LinkedInputOnClick.parameters = {
  ...LinkedInputOnClick.parameters,
  docs: {
    ...((_LinkedInputOnClick$p = LinkedInputOnClick.parameters) === null || _LinkedInputOnClick$p === void 0 ? void 0 : _LinkedInputOnClick$p.docs),
    source: {
      originalSource: "(args: any) => {\n  <WidgetInput {...args} />;\n}",
      ...((_LinkedInputOnClick$p2 = LinkedInputOnClick.parameters) === null || _LinkedInputOnClick$p2 === void 0 ? void 0 : (_LinkedInputOnClick$p3 = _LinkedInputOnClick$p2.docs) === null || _LinkedInputOnClick$p3 === void 0 ? void 0 : _LinkedInputOnClick$p3.source)
    }
  }
};
var _c;
__webpack_require__.$Refresh$.register(_c, "LinkedInputOnClick");
const __namedExportsOrder = ["LinkedInputOnClick"];

const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (typeof __react_refresh_error_overlay__ !== 'undefined') {
			errorOverlay = __react_refresh_error_overlay__;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ })

});