{"ast":null,"code":"var _jsxFileName = \"/Users/brettdickenson1/Desktop/WORK/TypeScript/greenspark-tech-task/src/components/WidgetBoxs/WidgetBoxs.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport \"./WidgetBoxs.scss\";\nimport { useAppDispatch, useAppSelector } from \"../../store/store\";\nimport { updateWidget, fetchWidgetData, activateBadge } from \"../../store/features/widgetSlice\";\nimport greenSparkLogo from \"../../assets/images/greenspark-logo.svg\";\nimport greenSparkLogoGreen from \"../../assets/images/greenspark-logo-green.svg\";\nimport greenSparkLogoBlack from \"../../assets/images/greenspark-logo-black.svg\";\nimport toolTipImg from \"../../assets/images/Tooltip.svg\";\nimport WidgetBtn from \"../UI/WidgetBtn/WidgetBtn\";\nimport WidgetInput from \"../UI/WidgetInput/WidgetInput\";\nimport SkeletonLoad from \"../UI/SkeletonLoad\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst COLORS = {\n  blue: \"#2E3A8C\",\n  green: \"#3B755F\",\n  creme: \"#F2EBDB\"\n};\nconst WidgetBoxs = () => {\n  _s();\n  const dispatch = useAppDispatch();\n  const widgetData = useAppSelector(state => state.widgetData.widgetData);\n  useEffect(() => {\n    dispatch(fetchWidgetData());\n  }, []);\n  const updateColor = (index, boxColor) => {\n    dispatch(updateWidget({\n      id: index,\n      selectedColor: boxColor\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"widgetBox\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Per product widgets\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), widgetData ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"innerBoxes\",\n      children: widgetData.map((widget, i) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"outerBox\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"top skeleton\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              background: widget.selectedColor,\n              color: widget.selectedColor === COLORS.creme ? COLORS.green : widget.selectedColor === \"white\" ? \"black\" : \"white\"\n            },\n            className: \"top skeleton\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: widget.selectedColor === COLORS.creme ? greenSparkLogoGreen : widget.selectedColor === \"white\" ? greenSparkLogoBlack : greenSparkLogo,\n              alt: \"greensparkLogo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"widgetContainer\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"This product \", widget.action]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"widgetTitle\",\n                children: widget.type === \"carbon\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [widget.amount, \" kgs of \", widget.type]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 73,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [widget.amount, \" \", widget.type]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 79,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bottom\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"innerBottom\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"publicProfile\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Link to Public Profile\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"tooltip\",\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: toolTipImg,\n                    alt: \"toolTipImg\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 92,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"tooltiptext\",\n                    children: [\"This widget links directly to your public profile so that you can easily share your impact with your customers. Turn it off here if you do not want the badge to link to it.\", /*#__PURE__*/_jsxDEV(\"a\", {\n                      \"aria-disabled\": true,\n                      href: \"https://brett-dickenson-portfolio.netlify.app/\",\n                      children: \"View Public Profile\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 98,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 93,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(WidgetInput, {\n                widgetData: widget\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"coloredBtns\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Badge color\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"colorBox\",\n                children: [/*#__PURE__*/_jsxDEV(WidgetBtn, {\n                  updateColor: updateColor,\n                  widgetData: widget,\n                  boxColor: COLORS.blue\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(WidgetBtn, {\n                  updateColor: updateColor,\n                  widgetData: widget,\n                  boxColor: COLORS.green\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(WidgetBtn, {\n                  updateColor: updateColor,\n                  widgetData: widget,\n                  boxColor: COLORS.creme\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(WidgetBtn, {\n                  updateColor: updateColor,\n                  widgetData: widget,\n                  boxColor: \"white\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(WidgetBtn, {\n                  updateColor: updateColor,\n                  widgetData: widget,\n                  boxColor: \"black\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"activateBadge\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Activate badge\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"switch\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  checked: widget.active ? true : false,\n                  type: \"checkbox\",\n                  onClick: () => dispatch(activateBadge({\n                    id: widget.id\n                  }))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"slider round\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(SkeletonLoad, {\n        classes: \"title width-50\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(WidgetBoxs, \"tSLzesUHCHKfyyYphEKB6wu+A3Y=\", false, function () {\n  return [useAppDispatch, useAppSelector];\n});\n_c = WidgetBoxs;\nexport default WidgetBoxs;\nvar _c;\n$RefreshReg$(_c, \"WidgetBoxs\");","map":{"version":3,"names":["React","useEffect","useAppDispatch","useAppSelector","updateWidget","fetchWidgetData","activateBadge","greenSparkLogo","greenSparkLogoGreen","greenSparkLogoBlack","toolTipImg","WidgetBtn","WidgetInput","SkeletonLoad","jsxDEV","_jsxDEV","Fragment","_Fragment","COLORS","blue","green","creme","WidgetBoxs","_s","dispatch","widgetData","state","updateColor","index","boxColor","id","selectedColor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","widget","i","style","background","color","src","alt","action","type","amount","href","checked","active","onClick","classes","_c","$RefreshReg$"],"sources":["/Users/brettdickenson1/Desktop/WORK/TypeScript/greenspark-tech-task/src/components/WidgetBoxs/WidgetBoxs.tsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport \"./WidgetBoxs.scss\";\nimport { useAppDispatch, useAppSelector } from \"../../store/store\";\nimport {\n  updateWidget,\n  fetchWidgetData,\n  activateBadge,\n} from \"../../store/features/widgetSlice\";\nimport greenSparkLogo from \"../../assets/images/greenspark-logo.svg\";\nimport greenSparkLogoGreen from \"../../assets/images/greenspark-logo-green.svg\";\nimport greenSparkLogoBlack from \"../../assets/images/greenspark-logo-black.svg\";\nimport toolTipImg from \"../../assets/images/Tooltip.svg\";\nimport WidgetBtn from \"../UI/WidgetBtn/WidgetBtn\";\nimport WidgetInput from \"../UI/WidgetInput/WidgetInput\";\nimport SkeletonLoad from \"../UI/SkeletonLoad\";\n\nconst COLORS = {\n  blue: \"#2E3A8C\",\n  green: \"#3B755F\",\n  creme: \"#F2EBDB\",\n};\n\nconst WidgetBoxs: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const widgetData = useAppSelector((state) => state.widgetData.widgetData);\n\n  useEffect(() => {\n    dispatch(fetchWidgetData());\n  }, []);\n\n  const updateColor = (index: number, boxColor: string) => {\n    dispatch(updateWidget({ id: index, selectedColor: boxColor }));\n  };\n\n  return (\n    <div className=\"widgetBox\">\n      <h3>Per product widgets</h3>\n      <hr />\n      {widgetData ? (\n        <div className=\"innerBoxes\">\n          {widgetData.map((widget, i) => {\n            return (\n              <div key={i} className=\"outerBox\">\n                <div className=\"top skeleton\" />\n                <div\n                  style={{\n                    background: widget.selectedColor,\n                    color:\n                      widget.selectedColor === COLORS.creme\n                        ? COLORS.green\n                        : widget.selectedColor === \"white\"\n                        ? \"black\"\n                        : \"white\",\n                  }}\n                  className=\"top skeleton\"\n                >\n                  <img\n                    src={\n                      widget.selectedColor === COLORS.creme\n                        ? greenSparkLogoGreen\n                        : widget.selectedColor === \"white\"\n                        ? greenSparkLogoBlack\n                        : greenSparkLogo\n                    }\n                    alt=\"greensparkLogo\"\n                  />\n                  <div className=\"widgetContainer\">\n                    <p>This product {widget.action}</p>\n                    <br />\n                    <div className=\"widgetTitle\">\n                      {widget.type === \"carbon\" ? (\n                        <>\n                          <span>\n                            {widget.amount} kgs of {widget.type}\n                          </span>\n                        </>\n                      ) : (\n                        <>\n                          <span>\n                            {widget.amount} {widget.type}\n                          </span>\n                        </>\n                      )}\n                    </div>\n                  </div>\n                </div>\n                <div className=\"bottom\">\n                  <div className=\"innerBottom\">\n                    <div className=\"publicProfile\">\n                      <p>Link to Public Profile</p>\n                      <div className=\"tooltip\">\n                        <img src={toolTipImg} alt=\"toolTipImg\" />\n                        <span className=\"tooltiptext\">\n                          This widget links directly to your public profile so\n                          that you can easily share your impact with your\n                          customers. Turn it off here if you do not want the\n                          badge to link to it.\n                          <a\n                            aria-disabled\n                            href=\"https://brett-dickenson-portfolio.netlify.app/\"\n                          >\n                            View Public Profile\n                          </a>\n                        </span>\n                      </div>\n                    </div>\n                    <WidgetInput widgetData={widget} />\n                  </div>\n                  <div className=\"coloredBtns\">\n                    <p>Badge color</p>\n                    <div className=\"colorBox\">\n                      <WidgetBtn\n                        updateColor={updateColor}\n                        widgetData={widget}\n                        boxColor={COLORS.blue}\n                      />\n                      <WidgetBtn\n                        updateColor={updateColor}\n                        widgetData={widget}\n                        boxColor={COLORS.green}\n                      />\n                      <WidgetBtn\n                        updateColor={updateColor}\n                        widgetData={widget}\n                        boxColor={COLORS.creme}\n                      />\n                      <WidgetBtn\n                        updateColor={updateColor}\n                        widgetData={widget}\n                        boxColor={\"white\"}\n                      />\n                      <WidgetBtn\n                        updateColor={updateColor}\n                        widgetData={widget}\n                        boxColor={\"black\"}\n                      />\n                    </div>\n                  </div>\n                  <div className=\"activateBadge\">\n                    <p>Activate badge</p>\n                    <label className=\"switch\">\n                      <input\n                        checked={widget.active ? true : false}\n                        type=\"checkbox\"\n                        onClick={() =>\n                          dispatch(\n                            activateBadge({\n                              id: widget.id,\n                            })\n                          )\n                        }\n                      />\n                      <span className=\"slider round\"></span>\n                      {/* <p>{JSON.stringify(widget.active)}</p> */}\n                    </label>\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      ) : (\n        <>\n          <SkeletonLoad classes=\"title width-50\" />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default WidgetBoxs;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}