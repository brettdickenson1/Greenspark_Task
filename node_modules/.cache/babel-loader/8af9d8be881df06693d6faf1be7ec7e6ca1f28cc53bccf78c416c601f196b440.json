{"ast":null,"code":"var _LinkedInput$paramete, _LinkedInput$paramete2, _LinkedInput$paramete3, _LinkedInputOnClick$p, _LinkedInputOnClick$p2, _LinkedInputOnClick$p3;\nimport { within, userEvent } from \"@storybook/testing-library\";\nimport WidgetInput from \"../components/UI/WidgetInput/WidgetInput\";\nimport { expect } from \"@storybook/jest\";\nconst meta = {\n  component: WidgetInput,\n  title: \"Linked & Active Inputs\"\n};\nexport default meta;\nexport const LinkedInput = {\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n    const loginButtonCheck = canvas.getByTestId(\"linkedInput\");\n    await expect(loginButtonCheck).toBeInTheDocument();\n  }\n};\nexport const LinkedInputOnClick = {\n  args: {\n    toggleStyles: false,\n    checkedState: false,\n    widgetData: {\n      id: 1,\n      type: \"plastic bottles\",\n      amount: 100,\n      linked: true,\n      selectedColor: \"#2E3A8C\"\n    }\n  },\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n    const inputClicked = canvas.getByRole(\"input\");\n    await expect(inputClicked).toBeInTheDocument();\n    await userEvent.click(inputClicked);\n  }\n};\nLinkedInput.parameters = {\n  ...LinkedInput.parameters,\n  docs: {\n    ...((_LinkedInput$paramete = LinkedInput.parameters) === null || _LinkedInput$paramete === void 0 ? void 0 : _LinkedInput$paramete.docs),\n    source: {\n      originalSource: \"{\\n  play: async ({\\n    canvasElement\\n  }) => {\\n    const canvas = within(canvasElement);\\n    const loginButtonCheck = canvas.getByTestId(\\\"linkedInput\\\");\\n    await expect(loginButtonCheck).toBeInTheDocument();\\n  }\\n}\",\n      ...((_LinkedInput$paramete2 = LinkedInput.parameters) === null || _LinkedInput$paramete2 === void 0 ? void 0 : (_LinkedInput$paramete3 = _LinkedInput$paramete2.docs) === null || _LinkedInput$paramete3 === void 0 ? void 0 : _LinkedInput$paramete3.source)\n    }\n  }\n};\nLinkedInputOnClick.parameters = {\n  ...LinkedInputOnClick.parameters,\n  docs: {\n    ...((_LinkedInputOnClick$p = LinkedInputOnClick.parameters) === null || _LinkedInputOnClick$p === void 0 ? void 0 : _LinkedInputOnClick$p.docs),\n    source: {\n      originalSource: \"{\\n  args: {\\n    toggleStyles: false,\\n    checkedState: false,\\n    widgetData: {\\n      id: 1,\\n      type: \\\"plastic bottles\\\",\\n      amount: 100,\\n      linked: true,\\n      selectedColor: \\\"#2E3A8C\\\"\\n    }\\n  },\\n  play: async ({\\n    canvasElement\\n  }) => {\\n    const canvas = within(canvasElement);\\n    const inputClicked = canvas.getByRole(\\\"input\\\");\\n    await expect(inputClicked).toBeInTheDocument();\\n    await userEvent.click(inputClicked);\\n  }\\n}\",\n      ...((_LinkedInputOnClick$p2 = LinkedInputOnClick.parameters) === null || _LinkedInputOnClick$p2 === void 0 ? void 0 : (_LinkedInputOnClick$p3 = _LinkedInputOnClick$p2.docs) === null || _LinkedInputOnClick$p3 === void 0 ? void 0 : _LinkedInputOnClick$p3.source)\n    }\n  }\n};\nexport const __namedExportsOrder = [\"LinkedInput\", \"LinkedInputOnClick\"];","map":{"version":3,"names":[],"sources":[],"sourcesContent":["import type { Meta, StoryObj } from \"@storybook/react\";\nimport { within, userEvent } from \"@storybook/testing-library\";\nimport WidgetInput from \"../components/UI/WidgetInput/WidgetInput\";\nimport { expect } from \"@storybook/jest\";\nconst meta: Meta<typeof WidgetInput> = {\n  component: WidgetInput,\n  title: \"Linked & Active Inputs\"\n};\nexport default meta;\ntype Story = StoryObj<typeof WidgetInput>;\nexport const LinkedInput: Story = {\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n    const loginButtonCheck = canvas.getByTestId(\"linkedInput\");\n    await expect(loginButtonCheck).toBeInTheDocument();\n  }\n};\nexport const LinkedInputOnClick: Story = {\n  args: {\n    toggleStyles: false,\n    checkedState: false,\n    widgetData: {\n      id: 1,\n      type: \"plastic bottles\",\n      amount: 100,\n      linked: true,\n      selectedColor: \"#2E3A8C\"\n    }\n  },\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n    const inputClicked = canvas.getByRole(\"input\");\n    await expect(inputClicked).toBeInTheDocument();\n    await userEvent.click(inputClicked);\n  }\n};\nLinkedInput.parameters = {\n  ...LinkedInput.parameters,\n  docs: {\n    ...LinkedInput.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  play: async ({\\n    canvasElement\\n  }) => {\\n    const canvas = within(canvasElement);\\n    const loginButtonCheck = canvas.getByTestId(\\\"linkedInput\\\");\\n    await expect(loginButtonCheck).toBeInTheDocument();\\n  }\\n}\",\n      ...LinkedInput.parameters?.docs?.source\n    }\n  }\n};\nLinkedInputOnClick.parameters = {\n  ...LinkedInputOnClick.parameters,\n  docs: {\n    ...LinkedInputOnClick.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  args: {\\n    toggleStyles: false,\\n    checkedState: false,\\n    widgetData: {\\n      id: 1,\\n      type: \\\"plastic bottles\\\",\\n      amount: 100,\\n      linked: true,\\n      selectedColor: \\\"#2E3A8C\\\"\\n    }\\n  },\\n  play: async ({\\n    canvasElement\\n  }) => {\\n    const canvas = within(canvasElement);\\n    const inputClicked = canvas.getByRole(\\\"input\\\");\\n    await expect(inputClicked).toBeInTheDocument();\\n    await userEvent.click(inputClicked);\\n  }\\n}\",\n      ...LinkedInputOnClick.parameters?.docs?.source\n    }\n  }\n};"],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}